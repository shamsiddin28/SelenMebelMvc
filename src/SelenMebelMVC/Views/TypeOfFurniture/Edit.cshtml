@using SelenMebel.Service.DTOs.TypeOfFurnitures;
@model TypeOfFurnitureForUpdateDto;
@{
    ViewData["Title"] = "Update TypeOfFurniture";
}


@if (TempData["InfoMessage"] != null)
{
    <div class='alert alert-info alert-dismissible fade show' role='alert'>
        <strong>Information ! </strong> @TempData["InfoMessage"]
        <button type="button" class="close" data-ds-dismiss='alert' aria-label="Close">
            <span>&times;</span>
        </button>
    </div>
}
else if (TempData["SuccessMessage"] != null)
{
    <div class='alert alert-success alert-dismissible fade show' role='alert'>
        <strong>Success ! </strong> @TempData["SuccessMessage"]
        <button type="button" class="close" data-ds-dismiss='alert' aria-label="Close">
            <span>&times;</span>
        </button>
    </div>
}
else if (TempData["ErrorMessage"] != null)
{
    <div class='alert alert-danger alert-dismissible fade show' role='alert'>
        <strong>Error ! </strong> @TempData["ErrorMessage"]
        <button type="button" class="close" data-ds-dismiss='alert' aria-label="Close">
            <span>&times;</span>
        </button>
    </div>
}

<div class="row">
    <div class="col-md-8 mx-auto rounded border p-3">
        <h2 class="text-center mb-5">@ViewData["Title"]</h2>
        <form method="post" asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label">Id</label>
                <div class="col-sm-8">
                    <input class="form-control" value="@ViewBag.Id" readonly />
                    <span class="text-danger"></span>
                </div>
            </div>
            <div class="row mb-3">
                <label asp-for="CategoryId" class="col-sm-4 col-form-label">Category</label>
                <div class="col-sm-8">
                    <select id="mySelect" asp-for="CategoryId" class="form-select form-select-solid fv-row mb-7 fv-plugins-icon-container" required>
                        @{
                            var categories = ViewBag.Categories;
                            foreach (var category in categories)
                            {
                                <option value="@category.Id.ToString()">@category.Name.ToString()</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label" id="typeOfFurniture">Available TypeOfFurnitures</label>
                <div class="col-sm-8">
                    <select id="typeOfSelenSelect" class="form-select form-select-solid fv-row mb-7 fv-plugins-icon-container">
                        @{
                            var typeOf = ViewBag.TypeOfFurnitures;
                            foreach (var item in typeOf)
                            {
                                <option value="@item.Id">@item.TypeOfSelen.ToString()</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <div class="row mb-3">
                <label asp-for="TypeOfSelen" class="col-sm-4 col-form-label">New TypeOfFurniture</label>
                <div class="col-sm-8">
                    <select class="form-select" asp-for="TypeOfSelen" required>
                        <option value="0">No Selected</option>
                        <option value="1">HiTech</option>
                        <option value="2">Classic</option>
                        <option value="3">Royal</option>
                        <option value="4">None</option>
                    </select>
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label">Old Image</label>
                <div class="col-sm-8">
                    <img src="~/@Model.ImagePath" alt="" width=200 />
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label" asp-for="Image">Image</label>
                <div class="col-sm-8">
                    <input class="form-control" type="file" asp-for="Image" required>
                    <span asp-validation-for="Image" class="text-danger"></span>
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label">CreatedAt</label>
                <div class="col-sm-8">
                    <input class="form-control" type="datetime" value="@ViewBag.CreatedAt" readonly>
                    <span class="text-danger"></span>
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label">UpdatedAt</label>
                <div class="col-sm-8">
                    <input class="form-control" type="datetime" value="@ViewBag.UpdatedAt" readonly>
                    <span class="text-danger"></span>
                </div>
            </div>
            <div class="row mb-3">
                <div class="offset-sm-4 col-sm-4 d-grid">
                    <button type="submit" class="btn btn-primary">Submit</button>
                </div>
                <div class="col-sm-4 d-grid">
                    <a class="btn btn-outline-primary" href="/TypeOfFurniture/Index" role="button">Cancel</a>
                </div>
            </div>

        </form>

    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.getElementById('mySelect').onchange = function () {
            var selectedValue = this.value;

            // Fetch request
            fetch(`/Furniture/GetCategoryById?id=${selectedValue}`, {
                method: 'GET',
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    // Handle response data accordingly
                    var typeOfFurnitures = data;
                    // Clear the select options
                    $('#typeOfSelenSelect').empty();

                    // Populate the select options with typeOfSelen enums
                    if (typeOfFurnitures.length === 0) {
                        $('#typeOfSelenSelect').append(`<option value="0">Not Available</option>`);
                        alert(`For this category not available the typeOfFurnitures !`)

                    } else {
                        typeOfFurnitures.forEach(furniture => {
                            var typeOfSelen = furniture.typeOfSelen;
                            var typeOfFurnitureId = furniture.id; // "Id" sini olish
                            var optionText = '';
                            switch (typeOfSelen) {
                                case 1:
                                    optionText = 'HiTech';
                                    break;
                                case 2:
                                    optionText = 'Classic';
                                    break;
                                case 3:
                                    optionText = 'Royal';
                                    break;
                                case 4:
                                    optionText = 'None';
                                    break;
                                default:
                                    optionText = 'Unknown';
                            }
                            $('#typeOfSelenSelect').append(`<option value="${typeOfFurnitureId}">${optionText}</option>`);
                        });
                    }
                })
                .catch(error => {
                    alert('Error: ' + error.message);
                });
        };
    </script>


}
